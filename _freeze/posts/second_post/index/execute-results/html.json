{
  "hash": "3739854cffd0475e02e1c2cf5694b3f5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"The Relationship Between Annual Income and Car Price\"\nauthor: \"Raihan Athallah\"\ndate: \"2024-12-02\"\ncategories: [code]\nimage: \"Car_sales.png\"\n---\n\n\n\n## Relationship Between Annual Income and Car Price\n\nDataset Source: [Car Sales Report Dataset](https://www.kaggle.com/datasets/missionjee/car-sales-report)\n\nThe scatter plot below shows the relationship between **Annual Income** and **Car Price** based on data from a car sales dataset. This data gives insights into car-buying behavior, showing how income influences purchasing decisions.\n\nOne of the key insights I noticed was that those with higher income levels are linked to higher car prices. The red line within the graph confirmed this by highlighting the relationship between the two variables. While this is true for most, there are some outliers, with some individuals with low incomes purchasing more expensive cars; they are likely to do this through financing or savings. On the other hand, some high-income buyers choose to buy budget-friendly vehicles, which could reflect their priorities or preferences for the car's practicalities instead.\n\nFrom the key insights I gained, this visualization is especially useful for car dealerships and manufacturers. Understanding the relationship between income and car prices could help them target the right audience and offer products to a broader range of customers. Lastly, it would be fun to see how this relationship will grow with the rise of electric and alternative fuel vehicles. With new trends, we could see a shift in how income influences people's choice of cars, and exploring further on this could reveal even more information on consumer behavior.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\n# Load the dataset\nsetwd(\"/Users/raihanseno/Documents/UIUC/Fall 2024/IS 407/hw3_Raihana2\")\ncar_sales_data <- read.csv(\"data/car_sales.csv\") # Ensure file path is correct\n\n# Check column names\ncolnames(car_sales_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Car_id\"        \"Date\"          \"Customer.Name\" \"Gender\"       \n [5] \"Annual.Income\" \"Dealer_Name\"   \"Company\"       \"Model\"        \n [9] \"Engine\"        \"Transmission\"  \"Color\"         \"Price....\"    \n[13] \"Dealer_No\"     \"Body.Style\"    \"Phone\"         \"Dealer_Region\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Filter out rows with missing or invalid data\ncar_sales_filtered <- car_sales_data %>%\n  filter(!is.na(Annual.Income) & !is.na(Price....)) \n\n# Convert income and price to thousands\ncar_sales_filtered <- car_sales_filtered %>%\n  mutate(\n    Annual.Income.Thousands = Annual.Income / 1000,\n    Price.Thousands = Price.... / 1000\n  )\n\n# Scatter plot: Car Price vs. Annual Income in thousands\nggplot(car_sales_filtered, aes(x = Price.Thousands, y = Annual.Income.Thousands)) +\n  geom_point(alpha = 0.5, color = \"blue\") + # Add scatter points\n  geom_smooth(method = \"lm\", se = FALSE, color = \"red\", linetype = \"dashed\") +\n  labs(\n    title = \"Relationship Between Car Price and Annual Income\",\n    x = \"Car Price (in thousands $)\",\n    y = \"Annual Income (in thousands $)\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}